// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v4.23.3
// source: v1/coauth.proto

package v1

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type VerifyCaptchaRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CaptchaKey    string                 `protobuf:"bytes,1,opt,name=captchaKey,proto3" json:"captchaKey,omitempty"`
	CaptchaCode   string                 `protobuf:"bytes,2,opt,name=captchaCode,proto3" json:"captchaCode,omitempty"`
	Clear         bool                   `protobuf:"varint,3,opt,name=clear,proto3" json:"clear,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VerifyCaptchaRequest) Reset() {
	*x = VerifyCaptchaRequest{}
	mi := &file_v1_coauth_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VerifyCaptchaRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerifyCaptchaRequest) ProtoMessage() {}

func (x *VerifyCaptchaRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_coauth_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerifyCaptchaRequest.ProtoReflect.Descriptor instead.
func (*VerifyCaptchaRequest) Descriptor() ([]byte, []int) {
	return file_v1_coauth_proto_rawDescGZIP(), []int{0}
}

func (x *VerifyCaptchaRequest) GetCaptchaKey() string {
	if x != nil {
		return x.CaptchaKey
	}
	return ""
}

func (x *VerifyCaptchaRequest) GetCaptchaCode() string {
	if x != nil {
		return x.CaptchaCode
	}
	return ""
}

func (x *VerifyCaptchaRequest) GetClear() bool {
	if x != nil {
		return x.Clear
	}
	return false
}

type VerifyCaptchaReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VerifyCaptchaReply) Reset() {
	*x = VerifyCaptchaReply{}
	mi := &file_v1_coauth_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VerifyCaptchaReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerifyCaptchaReply) ProtoMessage() {}

func (x *VerifyCaptchaReply) ProtoReflect() protoreflect.Message {
	mi := &file_v1_coauth_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerifyCaptchaReply.ProtoReflect.Descriptor instead.
func (*VerifyCaptchaReply) Descriptor() ([]byte, []int) {
	return file_v1_coauth_proto_rawDescGZIP(), []int{1}
}

func (x *VerifyCaptchaReply) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type LoginRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Username      string                 `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	Password      string                 `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	CaptchaKey    string                 `protobuf:"bytes,3,opt,name=captchaKey,proto3" json:"captchaKey,omitempty"`
	CaptchaCode   string                 `protobuf:"bytes,4,opt,name=captchaCode,proto3" json:"captchaCode,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LoginRequest) Reset() {
	*x = LoginRequest{}
	mi := &file_v1_coauth_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LoginRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginRequest) ProtoMessage() {}

func (x *LoginRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_coauth_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginRequest.ProtoReflect.Descriptor instead.
func (*LoginRequest) Descriptor() ([]byte, []int) {
	return file_v1_coauth_proto_rawDescGZIP(), []int{2}
}

func (x *LoginRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *LoginRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *LoginRequest) GetCaptchaKey() string {
	if x != nil {
		return x.CaptchaKey
	}
	return ""
}

func (x *LoginRequest) GetCaptchaCode() string {
	if x != nil {
		return x.CaptchaCode
	}
	return ""
}

type LoginReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AccessToken   string                 `protobuf:"bytes,1,opt,name=accessToken,proto3" json:"accessToken,omitempty"`
	RefreshToken  string                 `protobuf:"bytes,2,opt,name=refreshToken,proto3" json:"refreshToken,omitempty"`
	TokenType     string                 `protobuf:"bytes,3,opt,name=tokenType,proto3" json:"tokenType,omitempty"`
	ExpiresIn     int64                  `protobuf:"varint,4,opt,name=expiresIn,proto3" json:"expiresIn,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LoginReply) Reset() {
	*x = LoginReply{}
	mi := &file_v1_coauth_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LoginReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginReply) ProtoMessage() {}

func (x *LoginReply) ProtoReflect() protoreflect.Message {
	mi := &file_v1_coauth_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginReply.ProtoReflect.Descriptor instead.
func (*LoginReply) Descriptor() ([]byte, []int) {
	return file_v1_coauth_proto_rawDescGZIP(), []int{3}
}

func (x *LoginReply) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

func (x *LoginReply) GetRefreshToken() string {
	if x != nil {
		return x.RefreshToken
	}
	return ""
}

func (x *LoginReply) GetTokenType() string {
	if x != nil {
		return x.TokenType
	}
	return ""
}

func (x *LoginReply) GetExpiresIn() int64 {
	if x != nil {
		return x.ExpiresIn
	}
	return 0
}

type CaptchaRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CaptchaRequest) Reset() {
	*x = CaptchaRequest{}
	mi := &file_v1_coauth_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CaptchaRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CaptchaRequest) ProtoMessage() {}

func (x *CaptchaRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_coauth_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CaptchaRequest.ProtoReflect.Descriptor instead.
func (*CaptchaRequest) Descriptor() ([]byte, []int) {
	return file_v1_coauth_proto_rawDescGZIP(), []int{4}
}

type CaptchaReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CaptchaKey    string                 `protobuf:"bytes,1,opt,name=captchaKey,proto3" json:"captchaKey,omitempty"`
	CaptchaValue  string                 `protobuf:"bytes,2,opt,name=captchaValue,proto3" json:"captchaValue,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CaptchaReply) Reset() {
	*x = CaptchaReply{}
	mi := &file_v1_coauth_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CaptchaReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CaptchaReply) ProtoMessage() {}

func (x *CaptchaReply) ProtoReflect() protoreflect.Message {
	mi := &file_v1_coauth_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CaptchaReply.ProtoReflect.Descriptor instead.
func (*CaptchaReply) Descriptor() ([]byte, []int) {
	return file_v1_coauth_proto_rawDescGZIP(), []int{5}
}

func (x *CaptchaReply) GetCaptchaKey() string {
	if x != nil {
		return x.CaptchaKey
	}
	return ""
}

func (x *CaptchaReply) GetCaptchaValue() string {
	if x != nil {
		return x.CaptchaValue
	}
	return ""
}

type AddAppRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ClientName    string                 `protobuf:"bytes,1,opt,name=client_name,json=clientName,proto3" json:"client_name,omitempty"`
	HomePage      string                 `protobuf:"bytes,2,opt,name=home_page,json=homePage,proto3" json:"home_page,omitempty"`
	ClientSummary string                 `protobuf:"bytes,3,opt,name=client_summary,json=clientSummary,proto3" json:"client_summary,omitempty"`
	CallbackUrl   string                 `protobuf:"bytes,4,opt,name=callback_url,json=callbackUrl,proto3" json:"callback_url,omitempty"`
	Scopes        []string               `protobuf:"bytes,5,rep,name=scopes,proto3" json:"scopes,omitempty"`
	UserId        string                 `protobuf:"bytes,6,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddAppRequest) Reset() {
	*x = AddAppRequest{}
	mi := &file_v1_coauth_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddAppRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddAppRequest) ProtoMessage() {}

func (x *AddAppRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_coauth_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddAppRequest.ProtoReflect.Descriptor instead.
func (*AddAppRequest) Descriptor() ([]byte, []int) {
	return file_v1_coauth_proto_rawDescGZIP(), []int{6}
}

func (x *AddAppRequest) GetClientName() string {
	if x != nil {
		return x.ClientName
	}
	return ""
}

func (x *AddAppRequest) GetHomePage() string {
	if x != nil {
		return x.HomePage
	}
	return ""
}

func (x *AddAppRequest) GetClientSummary() string {
	if x != nil {
		return x.ClientSummary
	}
	return ""
}

func (x *AddAppRequest) GetCallbackUrl() string {
	if x != nil {
		return x.CallbackUrl
	}
	return ""
}

func (x *AddAppRequest) GetScopes() []string {
	if x != nil {
		return x.Scopes
	}
	return nil
}

func (x *AddAppRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type AddAppReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Code          int64                  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	ClientId      string                 `protobuf:"bytes,3,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddAppReply) Reset() {
	*x = AddAppReply{}
	mi := &file_v1_coauth_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddAppReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddAppReply) ProtoMessage() {}

func (x *AddAppReply) ProtoReflect() protoreflect.Message {
	mi := &file_v1_coauth_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddAppReply.ProtoReflect.Descriptor instead.
func (*AddAppReply) Descriptor() ([]byte, []int) {
	return file_v1_coauth_proto_rawDescGZIP(), []int{7}
}

func (x *AddAppReply) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *AddAppReply) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *AddAppReply) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

type AuthorizeRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ClientId      string                 `protobuf:"bytes,1,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	RedirectUri   string                 `protobuf:"bytes,2,opt,name=redirect_uri,json=redirectUri,proto3" json:"redirect_uri,omitempty"`
	ResponseType  string                 `protobuf:"bytes,3,opt,name=response_type,json=responseType,proto3" json:"response_type,omitempty"`
	State         string                 `protobuf:"bytes,4,opt,name=state,proto3" json:"state,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AuthorizeRequest) Reset() {
	*x = AuthorizeRequest{}
	mi := &file_v1_coauth_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AuthorizeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthorizeRequest) ProtoMessage() {}

func (x *AuthorizeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_coauth_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthorizeRequest.ProtoReflect.Descriptor instead.
func (*AuthorizeRequest) Descriptor() ([]byte, []int) {
	return file_v1_coauth_proto_rawDescGZIP(), []int{8}
}

func (x *AuthorizeRequest) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *AuthorizeRequest) GetRedirectUri() string {
	if x != nil {
		return x.RedirectUri
	}
	return ""
}

func (x *AuthorizeRequest) GetResponseType() string {
	if x != nil {
		return x.ResponseType
	}
	return ""
}

func (x *AuthorizeRequest) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

type AuthorizeReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Code          string                 `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	State         string                 `protobuf:"bytes,2,opt,name=state,proto3" json:"state,omitempty"`
	RedirectUri   string                 `protobuf:"bytes,3,opt,name=redirect_uri,json=redirectUri,proto3" json:"redirect_uri,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AuthorizeReply) Reset() {
	*x = AuthorizeReply{}
	mi := &file_v1_coauth_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AuthorizeReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthorizeReply) ProtoMessage() {}

func (x *AuthorizeReply) ProtoReflect() protoreflect.Message {
	mi := &file_v1_coauth_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthorizeReply.ProtoReflect.Descriptor instead.
func (*AuthorizeReply) Descriptor() ([]byte, []int) {
	return file_v1_coauth_proto_rawDescGZIP(), []int{9}
}

func (x *AuthorizeReply) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *AuthorizeReply) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *AuthorizeReply) GetRedirectUri() string {
	if x != nil {
		return x.RedirectUri
	}
	return ""
}

type TokenRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ClientId      string                 `protobuf:"bytes,1,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	ClientSecret  string                 `protobuf:"bytes,2,opt,name=client_secret,json=clientSecret,proto3" json:"client_secret,omitempty"`
	GrantType     string                 `protobuf:"bytes,3,opt,name=grant_type,json=grantType,proto3" json:"grant_type,omitempty"`
	Code          string                 `protobuf:"bytes,4,opt,name=code,proto3" json:"code,omitempty"`
	RedirectUri   string                 `protobuf:"bytes,5,opt,name=redirect_uri,json=redirectUri,proto3" json:"redirect_uri,omitempty"`
	DataType      string                 `protobuf:"bytes,6,opt,name=data_type,json=dataType,proto3" json:"data_type,omitempty"`
	RefreshToken  string                 `protobuf:"bytes,8,opt,name=refresh_token,json=refreshToken,proto3" json:"refresh_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TokenRequest) Reset() {
	*x = TokenRequest{}
	mi := &file_v1_coauth_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TokenRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TokenRequest) ProtoMessage() {}

func (x *TokenRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_coauth_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TokenRequest.ProtoReflect.Descriptor instead.
func (*TokenRequest) Descriptor() ([]byte, []int) {
	return file_v1_coauth_proto_rawDescGZIP(), []int{10}
}

func (x *TokenRequest) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *TokenRequest) GetClientSecret() string {
	if x != nil {
		return x.ClientSecret
	}
	return ""
}

func (x *TokenRequest) GetGrantType() string {
	if x != nil {
		return x.GrantType
	}
	return ""
}

func (x *TokenRequest) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *TokenRequest) GetRedirectUri() string {
	if x != nil {
		return x.RedirectUri
	}
	return ""
}

func (x *TokenRequest) GetDataType() string {
	if x != nil {
		return x.DataType
	}
	return ""
}

func (x *TokenRequest) GetRefreshToken() string {
	if x != nil {
		return x.RefreshToken
	}
	return ""
}

type TokenReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AccessToken   string                 `protobuf:"bytes,1,opt,name=access_token,json=accessToken,proto3" json:"access_token,omitempty"`
	TokenType     string                 `protobuf:"bytes,2,opt,name=token_type,json=tokenType,proto3" json:"token_type,omitempty"`
	ExpiresIn     int64                  `protobuf:"varint,3,opt,name=expires_in,json=expiresIn,proto3" json:"expires_in,omitempty"`
	RefreshToken  string                 `protobuf:"bytes,4,opt,name=refresh_token,json=refreshToken,proto3" json:"refresh_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TokenReply) Reset() {
	*x = TokenReply{}
	mi := &file_v1_coauth_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TokenReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TokenReply) ProtoMessage() {}

func (x *TokenReply) ProtoReflect() protoreflect.Message {
	mi := &file_v1_coauth_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TokenReply.ProtoReflect.Descriptor instead.
func (*TokenReply) Descriptor() ([]byte, []int) {
	return file_v1_coauth_proto_rawDescGZIP(), []int{11}
}

func (x *TokenReply) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

func (x *TokenReply) GetTokenType() string {
	if x != nil {
		return x.TokenType
	}
	return ""
}

func (x *TokenReply) GetExpiresIn() int64 {
	if x != nil {
		return x.ExpiresIn
	}
	return 0
}

func (x *TokenReply) GetRefreshToken() string {
	if x != nil {
		return x.RefreshToken
	}
	return ""
}

var File_v1_coauth_proto protoreflect.FileDescriptor

const file_v1_coauth_proto_rawDesc = "" +
	"\n" +
	"\x0fv1/coauth.proto\x12\rapi.coauth.v1\x1a\x1cgoogle/api/annotations.proto\"n\n" +
	"\x14VerifyCaptchaRequest\x12\x1e\n" +
	"\n" +
	"captchaKey\x18\x01 \x01(\tR\n" +
	"captchaKey\x12 \n" +
	"\vcaptchaCode\x18\x02 \x01(\tR\vcaptchaCode\x12\x14\n" +
	"\x05clear\x18\x03 \x01(\bR\x05clear\".\n" +
	"\x12VerifyCaptchaReply\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\"\x88\x01\n" +
	"\fLoginRequest\x12\x1a\n" +
	"\busername\x18\x01 \x01(\tR\busername\x12\x1a\n" +
	"\bpassword\x18\x02 \x01(\tR\bpassword\x12\x1e\n" +
	"\n" +
	"captchaKey\x18\x03 \x01(\tR\n" +
	"captchaKey\x12 \n" +
	"\vcaptchaCode\x18\x04 \x01(\tR\vcaptchaCode\"\x8e\x01\n" +
	"\n" +
	"LoginReply\x12 \n" +
	"\vaccessToken\x18\x01 \x01(\tR\vaccessToken\x12\"\n" +
	"\frefreshToken\x18\x02 \x01(\tR\frefreshToken\x12\x1c\n" +
	"\ttokenType\x18\x03 \x01(\tR\ttokenType\x12\x1c\n" +
	"\texpiresIn\x18\x04 \x01(\x03R\texpiresIn\"\x10\n" +
	"\x0eCaptchaRequest\"R\n" +
	"\fCaptchaReply\x12\x1e\n" +
	"\n" +
	"captchaKey\x18\x01 \x01(\tR\n" +
	"captchaKey\x12\"\n" +
	"\fcaptchaValue\x18\x02 \x01(\tR\fcaptchaValue\"\xc8\x01\n" +
	"\rAddAppRequest\x12\x1f\n" +
	"\vclient_name\x18\x01 \x01(\tR\n" +
	"clientName\x12\x1b\n" +
	"\thome_page\x18\x02 \x01(\tR\bhomePage\x12%\n" +
	"\x0eclient_summary\x18\x03 \x01(\tR\rclientSummary\x12!\n" +
	"\fcallback_url\x18\x04 \x01(\tR\vcallbackUrl\x12\x16\n" +
	"\x06scopes\x18\x05 \x03(\tR\x06scopes\x12\x17\n" +
	"\auser_id\x18\x06 \x01(\tR\x06userId\"X\n" +
	"\vAddAppReply\x12\x12\n" +
	"\x04code\x18\x01 \x01(\x03R\x04code\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12\x1b\n" +
	"\tclient_id\x18\x03 \x01(\tR\bclientId\"\x8d\x01\n" +
	"\x10AuthorizeRequest\x12\x1b\n" +
	"\tclient_id\x18\x01 \x01(\tR\bclientId\x12!\n" +
	"\fredirect_uri\x18\x02 \x01(\tR\vredirectUri\x12#\n" +
	"\rresponse_type\x18\x03 \x01(\tR\fresponseType\x12\x14\n" +
	"\x05state\x18\x04 \x01(\tR\x05state\"]\n" +
	"\x0eAuthorizeReply\x12\x12\n" +
	"\x04code\x18\x01 \x01(\tR\x04code\x12\x14\n" +
	"\x05state\x18\x02 \x01(\tR\x05state\x12!\n" +
	"\fredirect_uri\x18\x03 \x01(\tR\vredirectUri\"\xe8\x01\n" +
	"\fTokenRequest\x12\x1b\n" +
	"\tclient_id\x18\x01 \x01(\tR\bclientId\x12#\n" +
	"\rclient_secret\x18\x02 \x01(\tR\fclientSecret\x12\x1d\n" +
	"\n" +
	"grant_type\x18\x03 \x01(\tR\tgrantType\x12\x12\n" +
	"\x04code\x18\x04 \x01(\tR\x04code\x12!\n" +
	"\fredirect_uri\x18\x05 \x01(\tR\vredirectUri\x12\x1b\n" +
	"\tdata_type\x18\x06 \x01(\tR\bdataType\x12#\n" +
	"\rrefresh_token\x18\b \x01(\tR\frefreshToken\"\x92\x01\n" +
	"\n" +
	"TokenReply\x12!\n" +
	"\faccess_token\x18\x01 \x01(\tR\vaccessToken\x12\x1d\n" +
	"\n" +
	"token_type\x18\x02 \x01(\tR\ttokenType\x12\x1d\n" +
	"\n" +
	"expires_in\x18\x03 \x01(\x03R\texpiresIn\x12#\n" +
	"\rrefresh_token\x18\x04 \x01(\tR\frefreshToken2\xe2\x04\n" +
	"\x06coauth\x12g\n" +
	"\tAuthorize\x12\x1f.api.coauth.v1.AuthorizeRequest\x1a\x1d.api.coauth.v1.AuthorizeReply\"\x1a\x82\xd3\xe4\x93\x02\x14\x12\x12/v1/auth/authorize\x12Z\n" +
	"\x05Token\x12\x1b.api.coauth.v1.TokenRequest\x1a\x19.api.coauth.v1.TokenReply\"\x19\x82\xd3\xe4\x93\x02\x13:\x01*\"\x0e/v1/auth/token\x12\\\n" +
	"\x06AddApp\x12\x1c.api.coauth.v1.AddAppRequest\x1a\x1a.api.coauth.v1.AddAppReply\"\x18\x82\xd3\xe4\x93\x02\x12:\x01*\"\r/v1/auth/apps\x12_\n" +
	"\aCaptcha\x12\x1d.api.coauth.v1.CaptchaRequest\x1a\x1b.api.coauth.v1.CaptchaReply\"\x18\x82\xd3\xe4\x93\x02\x12\x12\x10/v1/auth/captcha\x12x\n" +
	"\rVerifyCaptcha\x12#.api.coauth.v1.VerifyCaptchaRequest\x1a!.api.coauth.v1.VerifyCaptchaReply\"\x1f\x82\xd3\xe4\x93\x02\x19\x12\x17/v1/auth/captcha/verify\x12Z\n" +
	"\x05Login\x12\x1b.api.coauth.v1.LoginRequest\x1a\x19.api.coauth.v1.LoginReply\"\x19\x82\xd3\xe4\x93\x02\x13:\x01*\"\x0e/v1/auth/loginB#\n" +
	"\rapi.coauth.v1P\x01Z\x10coauth/api/v1;v1b\x06proto3"

var (
	file_v1_coauth_proto_rawDescOnce sync.Once
	file_v1_coauth_proto_rawDescData []byte
)

func file_v1_coauth_proto_rawDescGZIP() []byte {
	file_v1_coauth_proto_rawDescOnce.Do(func() {
		file_v1_coauth_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_v1_coauth_proto_rawDesc), len(file_v1_coauth_proto_rawDesc)))
	})
	return file_v1_coauth_proto_rawDescData
}

var file_v1_coauth_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_v1_coauth_proto_goTypes = []any{
	(*VerifyCaptchaRequest)(nil), // 0: api.coauth.v1.VerifyCaptchaRequest
	(*VerifyCaptchaReply)(nil),   // 1: api.coauth.v1.VerifyCaptchaReply
	(*LoginRequest)(nil),         // 2: api.coauth.v1.LoginRequest
	(*LoginReply)(nil),           // 3: api.coauth.v1.LoginReply
	(*CaptchaRequest)(nil),       // 4: api.coauth.v1.CaptchaRequest
	(*CaptchaReply)(nil),         // 5: api.coauth.v1.CaptchaReply
	(*AddAppRequest)(nil),        // 6: api.coauth.v1.AddAppRequest
	(*AddAppReply)(nil),          // 7: api.coauth.v1.AddAppReply
	(*AuthorizeRequest)(nil),     // 8: api.coauth.v1.AuthorizeRequest
	(*AuthorizeReply)(nil),       // 9: api.coauth.v1.AuthorizeReply
	(*TokenRequest)(nil),         // 10: api.coauth.v1.TokenRequest
	(*TokenReply)(nil),           // 11: api.coauth.v1.TokenReply
}
var file_v1_coauth_proto_depIdxs = []int32{
	8,  // 0: api.coauth.v1.coauth.Authorize:input_type -> api.coauth.v1.AuthorizeRequest
	10, // 1: api.coauth.v1.coauth.Token:input_type -> api.coauth.v1.TokenRequest
	6,  // 2: api.coauth.v1.coauth.AddApp:input_type -> api.coauth.v1.AddAppRequest
	4,  // 3: api.coauth.v1.coauth.Captcha:input_type -> api.coauth.v1.CaptchaRequest
	0,  // 4: api.coauth.v1.coauth.VerifyCaptcha:input_type -> api.coauth.v1.VerifyCaptchaRequest
	2,  // 5: api.coauth.v1.coauth.Login:input_type -> api.coauth.v1.LoginRequest
	9,  // 6: api.coauth.v1.coauth.Authorize:output_type -> api.coauth.v1.AuthorizeReply
	11, // 7: api.coauth.v1.coauth.Token:output_type -> api.coauth.v1.TokenReply
	7,  // 8: api.coauth.v1.coauth.AddApp:output_type -> api.coauth.v1.AddAppReply
	5,  // 9: api.coauth.v1.coauth.Captcha:output_type -> api.coauth.v1.CaptchaReply
	1,  // 10: api.coauth.v1.coauth.VerifyCaptcha:output_type -> api.coauth.v1.VerifyCaptchaReply
	3,  // 11: api.coauth.v1.coauth.Login:output_type -> api.coauth.v1.LoginReply
	6,  // [6:12] is the sub-list for method output_type
	0,  // [0:6] is the sub-list for method input_type
	0,  // [0:0] is the sub-list for extension type_name
	0,  // [0:0] is the sub-list for extension extendee
	0,  // [0:0] is the sub-list for field type_name
}

func init() { file_v1_coauth_proto_init() }
func file_v1_coauth_proto_init() {
	if File_v1_coauth_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_v1_coauth_proto_rawDesc), len(file_v1_coauth_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_v1_coauth_proto_goTypes,
		DependencyIndexes: file_v1_coauth_proto_depIdxs,
		MessageInfos:      file_v1_coauth_proto_msgTypes,
	}.Build()
	File_v1_coauth_proto = out.File
	file_v1_coauth_proto_goTypes = nil
	file_v1_coauth_proto_depIdxs = nil
}
